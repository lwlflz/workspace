/**
 * 
 */
package com.build.cloud.modules.bs.service.impl;

import java.util.List;
import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.baomidou.mybatisplus.mapper.EntityWrapper;
import com.baomidou.mybatisplus.plugins.Page;
import com.baomidou.mybatisplus.service.impl.ServiceImpl;
import com.build.cloud.common.utils.PageUtils;
import com.build.cloud.common.utils.Query;
import com.build.cloud.modules.bs.dao.BsProjectDao;
import com.build.cloud.modules.bs.dao.OpPublicProjectDao;
import com.build.cloud.modules.bs.entity.BsProjectEntity;
import com.build.cloud.modules.bs.entity.OpPublicProjectEntity;
import com.build.cloud.modules.bs.service.IBsProjectService;
import com.build.cloud.modules.sys.dao.SysCompanyDao;

import cn.hutool.core.map.MapUtil;
import cn.hutool.core.util.StrUtil;

/**
 * @className BsProjectFileServiceImpl
 * @descripion 项目档案--实现层
 * @author huangchao
 * @date 2018年4月11日下午3:13:41
 */
@Service("bsProjectFileService")
public class BsProjectServiceImpl extends ServiceImpl<BsProjectDao, BsProjectEntity> implements IBsProjectService {
	
	@Autowired
	private SysCompanyDao sysCompanyDao;
	
	@Autowired
	private OpPublicProjectDao opPublicProjectDao;
	
	@Override
	public PageUtils queryPage(Map<String, Object> params) {
		Query<Map<String, Object>> query = new Query<Map<String, Object>>(params);
		Page<Map<String, Object>> page = query.getPage();
		List<Map<String, Object>> records = baseMapper.findProjectListByObject(page,query);
		page.setRecords(records);
		return new PageUtils(page);
	}

	@Override
	public List<BsProjectEntity> getProjectListByCompanyId(String companyId) {
		return baseMapper.getProjectListByCompanyId(companyId);
	}

	@Override
	public List<Map<String, Object>> getProById(Map<String, Object> params) {
		return baseMapper.findByProId(params);
	}

	@Override
	public int getPlanCiteProject(String projectId) {
		return baseMapper.getPlanCiteProject(projectId);
	}
	@Override
	public List<OpPublicProjectEntity> queryList(Map<String, Object> params) {
		EntityWrapper<OpPublicProjectEntity> wrapper = new EntityWrapper<OpPublicProjectEntity>();
		String opPublicProjectCode = MapUtil.getStr(params, "opPublicProjectCode");
		String opPublicProjectName = MapUtil.getStr(params, "opPublicProjectName");
		wrapper.like(StrUtil.isNotBlank(opPublicProjectCode),"op_project_code", opPublicProjectCode);
		wrapper.like(StrUtil.isNotBlank(opPublicProjectName),"op_project_name", opPublicProjectName);
		return opPublicProjectDao.selectList(wrapper);
	}
	
}
