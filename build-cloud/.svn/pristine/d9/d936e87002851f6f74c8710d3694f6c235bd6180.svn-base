package com.build.cloud.modules.sys.controller;
import java.util.List;
import java.util.Map;

import org.apache.shiro.authz.annotation.RequiresPermissions;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.JSONObject;
import com.baomidou.mybatisplus.mapper.EntityWrapper;
import com.build.cloud.common.utils.PageUtils;
import com.build.cloud.core.base.controller.AbstractController;
import com.build.cloud.core.base.controller.Result;
import com.build.cloud.modules.sys.entity.SysEmployeeEntity;
import com.build.cloud.modules.sys.entity.SysEmployeeTypeEntity;
import com.build.cloud.modules.sys.service.ISysEmployeeService;
import com.build.cloud.modules.sys.service.ISysEmployeeTypeService;

import cn.hutool.core.util.PinyinUtil;
/**
 * Title: SysEmployeeTypeController Description: 人员分类
 * @author 鲁四围
 * @date 2018年4月11日
 */
@RestController
@RequestMapping("sys/empType")
public class SysEmployeeTypeController extends AbstractController {
	@Autowired
	private ISysEmployeeTypeService sysEmployeeTypeService;
	@Autowired
	private ISysEmployeeService sysEmployeeService;
	/**
	 * 列表
	 */
	@RequestMapping("/v1/list")
	@RequiresPermissions("sys:empType:list")
	public Result list(@RequestParam Map<String, Object> params) {
		params.put("companyId", getCurrentCompanyId());
		PageUtils page = sysEmployeeTypeService.queryPage(params);
		return Result.ok().put(page);
	}
	/**
	 * 信息
	 */
	@RequestMapping("/v1/info")
	@RequiresPermissions("sys:empType:info")
	public Result info(String id) {
		SysEmployeeTypeEntity sysempType = sysEmployeeTypeService.selectById(id);
		return Result.ok().putEntity(sysempType);
	}
	/**
	 * 保存
	 */
	@RequestMapping("/v1/save")
	@RequiresPermissions("sys:empType:save")
	public Result save(@RequestBody SysEmployeeTypeEntity sysempType) {
		EntityWrapper<SysEmployeeTypeEntity> wrapper = new EntityWrapper<SysEmployeeTypeEntity>();
		wrapper.eq("emp_type_code", sysempType.getEmpTypeCode());
		int count = sysEmployeeTypeService.selectCount(wrapper);
		if(count > 0 ) {
			return Result.error("人员分类编码重复，请检查后重新添加");
		}
		sysempType.setPinyinCode(PinyinUtil.getAllFirstLetter(sysempType.getEmpTypeName()));
		sysempType.setCompanyId(getCurrentCompanyId());
		sysempType.setStatus("0");
		sysEmployeeTypeService.insert(sysempType);
		return Result.ok();
	}
	/**
	 * 修改
	 */
	@RequestMapping("/v1/update")
	@RequiresPermissions("sys:empType:update")
	public Result update(@RequestBody SysEmployeeTypeEntity sysempType) {
		EntityWrapper<SysEmployeeTypeEntity> wrapper = new EntityWrapper<SysEmployeeTypeEntity>();
		wrapper.eq("emp_type_code", sysempType.getEmpTypeCode());
		int count = sysEmployeeTypeService.selectCount(wrapper);
		List<SysEmployeeTypeEntity> setByCode = sysEmployeeTypeService.setByCode(sysempType.getEmpTypeCode());
		if(setByCode != null &&  setByCode.size() == 1 && setByCode.get(0) != null) {
			if(!setByCode.get(0).getId().equals(sysempType.getId()))
			return Result.error("人员分类编码重复，请检查后重新修改");
		}
		sysempType.setPinyinCode(PinyinUtil.getAllFirstLetter(sysempType.getEmpTypeName()));
		sysEmployeeTypeService.updateById(sysempType);
		return Result.ok();
	}
	/**
	 * 删除
	 */
	@RequestMapping("/v1/delete")
	@RequiresPermissions("sys:empType:delete")
	public Result delete(@RequestBody String id) {
		JSONObject obj = JSON.parseObject(id);
		id = obj.getString("id");
		EntityWrapper<SysEmployeeEntity> ew = new EntityWrapper<SysEmployeeEntity>();
		ew.eq("emp_type_id", id);
		ew.eq("valid", "0");
		int ret = sysEmployeeService.selectCount(ew);
		if (ret > 0) {
			return Result.error("删除分类下有人员，不能删除");
		}
		sysEmployeeTypeService.deleteById(id);
		return Result.ok();
	}
	@RequestMapping("/v1/getEmpTypeList")
	public Result getEmpTypeList() {
		EntityWrapper<SysEmployeeTypeEntity> ew = new EntityWrapper<SysEmployeeTypeEntity>();
		ew.eq("status", "0");
		ew.eq("company_id", getCurrentCompanyId());
		List<SysEmployeeTypeEntity> list = sysEmployeeTypeService.selectList(ew);
		return Result.ok().putList(list);
	}
}
