package com.build.cloud.modules.punch.controller;

import java.util.List;
import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import com.baomidou.mybatisplus.mapper.EntityWrapper;
import com.build.cloud.common.utils.PageUtils;
import com.build.cloud.common.validator.ValidatorUtils;
import com.build.cloud.common.validator.group.AddGroup;
import com.build.cloud.common.validator.group.UpdateGroup;
import com.build.cloud.core.base.controller.AbstractController;
import com.build.cloud.core.base.controller.Result;
import com.build.cloud.modules.punch.entity.DevInfoEntity;
import com.build.cloud.modules.punch.service.IDevInfoService;

import cn.hutool.core.util.StrUtil;

/**
 * <p>Title: DevInfoController</p>  
 * <p>Description: </p>  
 * @author WangJun
 * @date 2018年8月4日 下午4:14:39
 */
@RestController()
@RequestMapping("/dev")
public class DevInfoController extends AbstractController{
	
	@Autowired
	private IDevInfoService devInfoService;
	/**
	 * 考勤机列表
	 * @param params
	 * @return
	 */
	@GetMapping("/v1/list")
	public Result list(@RequestParam Map<String, Object> params) {
//		params.put("companyId", getCurrentCompanyId());
		PageUtils page = devInfoService.selectPageByCompanyId(params);
		return Result.ok().put("result",page);
	}
	/**
	 * 保存考勤机
	 * @param entity
	 * @return
	 */
	@PostMapping("/v1/save")
	public Result save(@RequestBody DevInfoEntity entity) {
		try {
			ValidatorUtils.validateEntity(entity, AddGroup.class);
			entity.setCompanyId(getCurrentCompanyId());
			devInfoService.save(entity);
			return Result.ok("保存成功").putObject("id", entity.getId());
		}catch(Exception e) {
			logger.error("保存采购订单异常", e);
			return Result.error("保存失败"+e.getMessage());
		}
		
	}
	/**
	 * 更新考勤机
	 * @param entity
	 * @return
	 */
	@PostMapping("/v1/update")
	public Result update(@RequestBody DevInfoEntity entity) {
		try {
			ValidatorUtils.validateEntity(entity, UpdateGroup.class);
			devInfoService.updateById(entity);
			return Result.ok("更新成功");
		}catch(Exception e) {
			logger.error("更新采购订单异常", e);
			return Result.error("更新失败"+e.getMessage());
		}
		
	}
	/**
	 * 获取考勤信息
	 * @param id
	 * @return
	 */
	@GetMapping("/v1/info")
	public Result info(String id) {
		if(StrUtil.isBlank(id)){
			return Result.error("ID不能为空");
		}
		DevInfoEntity entity = devInfoService.selectinfoById(id);
		return Result.ok().putEntity(entity);
	}
	/**
	 * 删除考勤信息
	 * @param str
	 * @return
	 */
	@PostMapping("/v1/delete")
	public Result delete(@RequestBody String str) {
		String id = getDelId(str);
		if(StrUtil.isBlank(id)){
			return Result.error("ID不能为空");
		}
		DevInfoEntity entity = devInfoService.selectinfoById(id);
		if(entity.getList().size() != 0) {
			return Result.error("删除失败，已被项目引用");
		}
		devInfoService.deleteById(id);
		return Result.ok("删除成功");
	}
	
}
